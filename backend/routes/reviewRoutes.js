const express = require("express");
const router = express.Router();
const User = require("../models/User");
const Review = require("../models/Review"); // EÄŸer bÃ¶yle bir model yoksa oluÅŸturmalÄ±sÄ±n
const authMiddleware = require("../middleware/authMiddleware");

// ğŸ“Œ Yeni yorum ekleme
router.post("/", authMiddleware, async (req, res) => {
    try {
        const { movieId, username, rating, comment } = req.body;
        const userId = req.user.id;

        if (!movieId || !username || !rating || !comment) {
            return res.status(400).json({ message: "Eksik bilgi. LÃ¼tfen tÃ¼m alanlarÄ± doldurun." });
        }

        const newReview = new Review({
            movieId,
            userId,
            username,
            rating,
            comment,
            createdAt: new Date(),
        });

        await newReview.save();
        return res.status(201).json({ message: "Yorum baÅŸarÄ±yla eklendi.", review: newReview });
    } catch (error) {
        console.error("ğŸš¨ Yorum eklerken hata oluÅŸtu:", error);
        res.status(500).json({ message: "Sunucu hatasÄ±." });
    }
});

// ğŸ“Œ Belirli bir filmin yorumlarÄ±nÄ± getir
router.get("/:movieId", async (req, res) => {
    try {
        const { movieId } = req.params;
        const reviews = await Review.find({ movieId }).sort({ createdAt: -1 });

        return res.status(200).json(reviews);
    } catch (error) {
        console.error("ğŸš¨ YorumlarÄ± Ã§ekerken hata oluÅŸtu:", error);
        res.status(500).json({ message: "Sunucu hatasÄ±." });
    }
});

module.exports = router;